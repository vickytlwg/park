<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.park.dao.FeeoperatorDAO" >
  <resultMap id="BaseResultMap" type="com.park.model.Feeoperator" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="signStatus" property="signstatus" jdbcType="BIT" />
    <result column="lastSignDate" property="lastsigndate" jdbcType="TIMESTAMP" />
    <result column="lastStreetId" property="laststreetid" jdbcType="INTEGER" />
    <result column="lastPosNum" property="lastposnum" jdbcType="VARCHAR" />
    <result column="registerDate" property="registerdate" jdbcType="TIMESTAMP" />
    <result column="other" property="other" jdbcType="VARCHAR" />
  </resultMap>
 <sql id="Base_Column_List" >
    id, account, name, passwd, phone, signStatus, lastSignDate, lastStreetId, lastPosNum, 
    registerDate, other
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from feeOperator
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from feeOperator
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.park.model.Feeoperator" >
    insert into feeOperator (id, account, name, 
      passwd, phone, signStatus, 
      lastSignDate, lastStreetId, lastPosNum, 
      registerDate, other)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{passwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{signstatus,jdbcType=BIT}, 
      #{lastsigndate,jdbcType=TIMESTAMP}, #{laststreetid,jdbcType=INTEGER}, #{lastposnum,jdbcType=VARCHAR}, 
      #{registerdate,jdbcType=TIMESTAMP}, #{other,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.park.model.Feeoperator" >
    insert into feeOperator
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="signstatus != null" >
        signStatus,
      </if>
      <if test="lastsigndate != null" >
        lastSignDate,
      </if>
      <if test="laststreetid != null" >
        lastStreetId,
      </if>
      <if test="lastposnum != null" >
        lastPosNum,
      </if>
      <if test="registerdate != null" >
        registerDate,
      </if>
      <if test="other != null" >
        other,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="signstatus != null" >
        #{signstatus,jdbcType=BIT},
      </if>
      <if test="lastsigndate != null" >
        #{lastsigndate,jdbcType=TIMESTAMP},
      </if>
      <if test="laststreetid != null" >
        #{laststreetid,jdbcType=INTEGER},
      </if>
      <if test="lastposnum != null" >
        #{lastposnum,jdbcType=VARCHAR},
      </if>
      <if test="registerdate != null" >
        #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.model.Feeoperator" >
    update feeOperator
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="signstatus != null" >
        signStatus = #{signstatus,jdbcType=BIT},
      </if>
      <if test="lastsigndate != null" >
        lastSignDate = #{lastsigndate,jdbcType=TIMESTAMP},
      </if>
      <if test="laststreetid != null" >
        lastStreetId = #{laststreetid,jdbcType=INTEGER},
      </if>
      <if test="lastposnum != null" >
        lastPosNum = #{lastposnum,jdbcType=VARCHAR},
      </if>
      <if test="registerdate != null" >
        registerDate = #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.model.Feeoperator" >
    update feeOperator
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      signStatus = #{signstatus,jdbcType=BIT},
      lastSignDate = #{lastsigndate,jdbcType=TIMESTAMP},
      lastStreetId = #{laststreetid,jdbcType=INTEGER},
      lastPosNum = #{lastposnum,jdbcType=VARCHAR},
      registerDate = #{registerdate,jdbcType=TIMESTAMP},
      other = #{other,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getCount">
  	select count(*) from feeOperator 
  </select>
  <select id="getByStartAndCount" resultType="com.park.model.Feeoperator">
  	select f.id,f.account,f.name,f.phone,f.signstatus,f.passwd,f.lastsigndate,f.laststreetid,
  	s.number,s.name as streetname,f.lastposnum,f.registerdate from feeOperator as f 
  	left join street as s on s.id = f.laststreetid
  	limit #{start},#{count} 
  </select>
  <select id="operatorValidation" resultType="com.park.model.Feeoperator">
  	select * from feeOperator where account=#{account} and passwd=#{passwd}
  </select>
</mapper>