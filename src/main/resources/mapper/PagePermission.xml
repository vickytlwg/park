<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.park.dao.PagePermissionDAO">

  	<resultMap id="PageMapper" type="com.park.model.Page">
		<id property="id" column="id" />
		<result property="description" column="description" />
		<result property="uri" column="uri"/>
		<result property="pageKey" column="pageKey"/>		
	</resultMap>  
	
	<resultMap id="RoleMapper" type="Role">
		<id property="id" column="id" />
		<result property="description" column="description" />
		<result property="name" column="name"/>
	</resultMap>   
	
	<resultMap id="PagePermissionMapper" type="com.park.model.PagePermission">
		<id property="id" column="id" />
		<result property="pageId" column="pageId" />
		<result property="roleId" column="roleId"/>		
	</resultMap> 
	
	<resultMap id="UserRoleMapper" type="com.park.model.UserRole">
		<id property="id" column="id" />
		<result property="userId" column="userId" />
		<result property="roleId" column="roleId"/>		
	</resultMap> 
	
	<select id="getRoles" resultMap="RoleMapper">
		select * from role
	</select>
	
	<select id="getUserRole" resultMap="RoleMapper">
		select role.id, role.name, role.description from role
		left join userRole on userRole.roleId = role.id
		where userRole.userId=#{param1}
	</select>
	
	<insert id="createRole" parameterType="Role">
		insert into role(name, description) values(#{name}, #{description})
	</insert>
	
	<update id="updateRole" parameterType="Role">
		update role set name=#{name}, description=#{description} where id=#{id}
	</update>
	
	<delete id="deleteRole" parameterType="int">
		delete from role where id=#{param1}
	</delete>
	
	<select id="getPage" resultMap="PageMapper">
		select * from page
	</select>
	
	<insert id="createPage" parameterType="Page">
		insert into page(description, uri, pageKey) values(#{description}, #{uri}, #{pageKey})
	</insert>
	
	<update id="updatePage" parameterType="Page">
		update page set description=#{description}, uri=#{uri}, pageKey=#{pageKey} where id=#{id}
	</update>
	
	<delete id="deletePage" parameterType="int">
		delete from page where id=#{param1}
	</delete>
		
	<delete id="deleteRolePage" parameterType="int">
		delete from pagePermission where roleId=#{param1}
	</delete>
	
	<delete id="deleteUserRole" parameterType="int">
		delete from userRole where userId=#{param1}
	</delete>
	
	<insert id="createRolePage" parameterType="PagePermission">
	 	insert into pagePermission(pageId, roleId) values(#{pageId}, #{roleId})
	</insert>
	
	<insert id="createUserRole" parameterType="UserRole">
		insert into userRole(userId, roleId) values(#{userId}, #{roleId})
	</insert>
	
	<select id="getRolePage" resultMap="PageMapper">
		select page.id, page.uri, page.description from page
		left join pagePermission on page.id = pagePermission.pageId
		where pagePermission.roleId=#{roleId}
	</select>
	
	
	
</mapper>