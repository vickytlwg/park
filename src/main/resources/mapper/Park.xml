<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.park.dao.ParkDAO">
  	<resultMap id="ParkMapper" type="Park">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="portCount" column="portCount"/>
		<result property="channelCount" column="channelCount"/>
		<result property="portLeftCount" column="portLeftCount" />
		<result property="feeCriterionId" column="feeCriterionId"/>
		<result property="status" column="status" />
		<result property="isFree" column="isFree"/>
		<result property="floor" column="floor"/>
		<result property="type" column="type"/>
		<result property="position" column="position" />
		<result property="longitude" column="longitude" />
		<result property="latitude" column="latitude" />
		<result property="alias" column="alias" />
		<result property="mapAddr" column="mapAddr" />
		<result property="date" column="date"/>
		<result property="isDeleted" column="isDeleted"/>
		<result property="contact" column="contact" />
		<result property="number" column="number" />
		<result property="pictureUri" column="pictureUri"/>
		<result property="description" column="description"/>
	</resultMap>    
	
	<resultMap id="ParkDetailMapper" type="com.park.model.ParkDetail">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="portCount" column="portCount"/>
		<result property="channelCount" column="channelCount"/>
		<result property="portLeftCount" column="portLeftCount" />
		<result property="feeCriterionName" column="feeCriterionName"/>
		<result property="feeCriterionId" column="feeCriterionId"/>
		<result property="status" column="status" />
		<result property="isFree" column="isFree"/>
		<result property="floor" column="floor"/>
		<result property="type" column="type"/>
		<result property="longitude" column="longitude" />
		<result property="latitude" column="latitude" />
		<result property="alias" column="alias" />
		<result property="mapAddr" column="mapAddr" />
		<result property="position" column="position" />
		<result property="date" column="date"/>
		<result property="contact" column="contact" />
		<result property="number" column="number" />
		<result property="pictureUri" column="pictureUri"/>
		<result property="description" column="description"/>
	</resultMap> 


	<select id="getParks" resultMap="ParkMapper">
		select * from park
	</select>
	
	<select id="nameToId" resultType="int">
		select id from park where name = #{param1}
	</select>
	
	<select id="getParkByName" resultMap="ParkMapper">
		select * from park where name like #{param1} or position like #{param1}
	</select>
	
	<select id="getParkById" resultMap="ParkMapper">
		select * from park where id = #{id}
	</select>
	
	
	
	<select id="getParkDetail" resultMap="ParkDetailMapper">
		select park.id, park.name, park.portCount, park.channelCount, portLeftCount, feeCriterion.name as feeCriterionName, 
		feeCriterion.id as feeCriterionId, park.status, park.isFree, park.floor, park.type,
		 park.longitude, park.latitude, park.alias, park.mapAddr, park.position, park.date,
		  park.contact, park.number, park.pictureUri, park.description 
		  from park left join feeCriterion on park.feeCriterionId = feeCriterion.id	
		order by id  limit #{low}, #{count}
	</select>
	
	
	<select id="getParkDetailByKeywords" parameterType="String" resultMap="ParkMapper" statementType="STATEMENT">
		  select * from park where park.position like '%${param1}%'
	</select>
	<select id="getParkCount"  resultType="int">
		select count(*) from park
	</select>
	<select id="getLastPark" resultMap="ParkMapper">
		select * from park order by id desc limit 1;
	</select>
	<insert id="insertPark" parameterType="Park" keyProperty="id">
		insert into park(name, portCount, portLeftCount, channelCount, feeCriterionId,  status, isFree, floor, type, longitude, latitude, alias, mapAddr, position, date, isDeleted, contact, number, description, pictureUri) 
		values(#{name}, #{portCount}, #{portLeftCount}, #{channelCount},  #{feeCriterionId}, #{status}, #{isFree}, #{floor}, #{type}, #{longitude}, #{latitude}, #{alias}, #{mapAddr}, #{position}, #{date}, #{isDeleted}, #{contact}, #{number}, #{description}, #{pictureUri})
	</insert>
	
	<update id="updatePark" parameterType="Park" >
		update park set name = #{name}, portCount = #{portCount}, portLeftCount = #{portLeftCount}, channelCount = #{channelCount}, feeCriterionId = #{feeCriterionId}, 
		 status = #{status}, isFree = #{isFree}, floor = #{floor}, type = #{type}, longitude=#{longitude}, latitude=#{latitude}, alias=#{alias}, mapAddr=#{mapAddr}, position = #{position}, date = #{date}, 
		 isDeleted = #{isDeleted}, contact=#{contact}, number=#{number}, description=#{description}, pictureUri=#{pictureUri} where id = #{id}
	</update>
	
	<update id="updateLeftPortCount">
		update park set portLeftCount = #{portLeftCount} where id = #{id} 
	</update>
	
	<delete id="deletePark" parameterType="int">
		delete from park where id = #{id}
	</delete>
	     
          
</mapper>